import java.util.Scanner;

class Main {
  public static void main(String[] args) 
  {
    //Defining Scanner
    Scanner in = new Scanner(System.in);

    //Asking the player1 names
    System.out.print("Player 1 Name: ");
    String p1 = in.nextLine();
    System.out.print("Player 2 Name: ");
    String p2 = in.nextLine();

    //definig the  board 3x3
    char[][] board = new char[3][3];

    //Filling the board with empty spaces
    for(int i=0;i<3;i++)
      {
        for(int j=0;j<3;j++)
          {
            board[i][j] = '-';
          }
      }

    //Keeping track of turns
    boolean isPlayer1 = true;

    //end tracker
    boolean gameEnded = false;
    
    while(!gameEnded) // giant loop for every turn
    {
      drawBoard(board);
  
      //Keeping track of what symbol we use
      char symbol = ' ';
      if(isPlayer1)
      {
        symbol = 'x';
      }
      else 
      {
        symbol = 'o';
      }
  
      //Printing players turn
      if(isPlayer1)
      {
        System.out.println(p1 + "'s Turn (x): ");
      }
      else
      {
        System.out.println(p2 + "'s Turn (o): ");
      }
  
  
      
      int row;
      int col;
  
      
      while(true)
      {
        //getting row and column input
        System.out.print("Enter a row (0, 1, 2): ");
        row = in.nextInt();
        System.out.print("Enter a col (0, 1, 2): ");
        col = in.nextInt();
    
        //Check if row and column are valid choices
        if(row<0 || col<0 || row>2 || col>2 ) // if both row or columns is less then 0 or greater then 2
        {
          System.out.println("Your move is out of bounds!");
          
        } else if(board[row][col] != '-') // if choice does not equal "-", someone has moved there 
        {
          System.out.println("Someone has already made a move there!");
        }
        else
        {
          break;
        }
      }
  
      //Setting position to players choice
      board[row][col] = symbol;
  
      //Check if there is a winner
      if(hasWon(board) == 'x') //p1
      {
        System.out.println(p1 + " has won!");
        gameEnded = true;
      }
      else if(hasWon(board) == 'o') //p2
      {
        System.out.println(p2 + " has won!");
        gameEnded = true;
      }
      else //nobody has won
      {
        if(hasTied(board))
        {
          //Tie
          System.out.println("It's a Tie!");
          gameEnded = true; // closes big loop
        }
        else
        {
          //Turn toggler
          isPlayer1 = !isPlayer1;
          System.out.println();
        }   
      }
    }


    
  }
  //Printing out the tiktok board
  public static void drawBoard(char[][] board)
  {
    for(int i=0;i<3;i++)
      {
        for(int j=0;j<3;j++)
          {
            System.out.print(board[i][j] + " ");
          }
        System.out.println();
        System.out.println();
      }
  }

  public static char hasWon(char[][] board)
  {
    //row
    //checks if there is 3 of something in a ROW, but not 3 of "-"
    for(int i=0;i<3;i++)
      {
        if(board[i][0] == board[i][1] && board[i][1] == board[i][2] && board[i][0] !='-')
        {
          return board[i][0];
        }
      }
    //col
    //checks if there is 3 of something in a COL, but not 3 of "-"
    for(int l=0;l<3;l++)
      {
        if(board[0][l] == board[1][l] && board[1][l] == board[2][l] && board[0][l] !='-')
        {
          return board[0][l];
        }
      }
    
    //diag
    //checks if there is 3 of something in a DIAGONAL, but not 3 of "-"
    if(board[0][0] == board[1][1] && board[1][1] == board[2][2] && board[0][0] != '-')
    {
      return board[0][0];
    }
    if(board[2][0] == board [1][1] && board[1][1] == board[0][2] && board[2][0] != '-')
    {
      return board[2][0];
    }
    
    //no winner
    return '-';
  }


  //Check if board if full
  //If the board does not contain any "-", but there is no winner, then the function will return true.     
  public static boolean hasTied(char board[][])
  {
    for(int i=0; i<3;i++)
      {
        for(int j=0;j<3;j++)
          {
            if(board[i][j] == '-')
            {
              return false;
            }
          }
      }
    return true;
  }
}
